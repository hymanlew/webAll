#数据库连接

driverClassName=com.mysql.jdbc.Driver
#url=jdbc:mysql://localhost:3306/net_building?autoReconnect=true&character=utf8&useUnicode=true&zeroDateTimeBehavior=convertToNull&useCursorFetch=true&defaultFetchSize=100
url=jdbc:mysql://localhost:3306/test?autoReconnect=true&character=utf8&useUnicode=true&zeroDateTimeBehavior=convertToNull&useCursorFetch=true
name=root
password=123456

t.url=jdbc:mysql://localhost:3306/test?autoReconnect=true&character=utf8&useUnicode=true&zeroDateTimeBehavior=convertToNull&useCursorFetch=true
t.name=root
t.password=123456

#JAVA连接MySQL数据库，在操作值为0的timestamp类型时不能正确的处理，而是默认抛出一个异常，就是所见的：java.sql.SQLException: Cannot convert value
#'0000-00-00 00:00:00' from column 7 to TIMESTAMP。

#这一问题在官方文档中有详细说明，详见如下链接： http://bugs.mysql.com/bug.php?id=19274 http://dev.mysql.com/doc/refman/5.5/en/connector-j-installing-upgrading.html

#在JDBC连接串中有一项属性：zeroDateTimeBehavior,可以用来配置出现这种情况时的处理策略，该属性有下列三个属性值：

# exception：默认值，即抛出SQL state [S1009]. Cannot convert value....的异常；
# convertToNull：将日期转换成NULL值；
# round：替换成最近的日期即0001-01-01；
#因此对于这类异常，可以考虑通过修改连接串，附加zeroDateTimeBehavior=convertToNull属性的方式予以规避。



filters=stat,wall
initialSize=2
maxIdle=10
maxActive=20
maxWait=5000
timeBetweenEvictionRunsMillis=3000000
minEvictableIdleTimeMillis=3600000
maxPoolPreparedStatementPerConnectionSize=20
testWhileIdle=true
validationQuery=SELECT COUNT(*) FROM DUAL
removeAbandoned=true
removeAbandonedTimeout=180
logAbandoned = true


#<Resource
#    name="jdbc/TestDB"  JNDI数据源的name，查找时用：java:comp/env/jdbc/TestDB
#    type="javax.sql.DataSource"
#    factory="org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory"
#    driverClassName="com.mysql.jdbc.Driver" JDBC驱动类
#    url="jdbc:mysql://localhost:3306/test?
#    characterEncoding=UTF-8&amp;autoReconnectForPools=true&amp;rewriteBatchedStatements=true&amp;useCursorFetch=true&amp;defaultFetchSize=20" 数据库URL地址
#    username="xxx" 访问数据库用户名
#    password="xxx" 访问数据库的密码
#
#    maxWait="3000" 从池中取连接的最大等待时间，单位ms. 超过时间会出错误信息
#    initialSize="10"  初始化连接
#    maxIdle="60"   最大空闲连接
#    minIdle="10"   最小空闲连接
#    maxActive="80" 最大活动连接
#
#    validationQuery = "SELECT 1"  验证使用的SQL语句
#    testWhileIdle = "true"      指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
#    testOnBorrow = "false"      借出连接时不要测试，否则很影响性能
#    testOnReturn = "false"      归还连接时不要测试，否则很影响性能
#    timeBetweenEvictionRunsMillis = "30000"  每30秒运行一次空闲连接回收器
#    minEvictableIdleTimeMillis = "1800000"  池中的连接空闲30分钟后被回收
#    numTestsPerEvictionRun="10" 在每次空闲连接回收器线程(如果有)运行时检查的连接数量
#    maxPoolPreparedStatementPerConnectionSize=20   连接池最大连接数量
#    maxOpenPreparedStatements = -1	 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#             在Druid中，不会存在 Oracle下 PSCache占用内存过多的问题， 可以把这个数值配置大一些，比如说100
#
#    removeAbandoned="true"  连接泄漏回收参数，当可用连接数少于3个时才执行
#    removeAbandonedTimeout="180"  连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值
#    filters  该属性类型是字符串，通过别名的方式配置扩展插件， 常用的插件有：
#             监控统计用的 filter:stat，日志用的 filter:log4j，防御 sql注入的 filter:wall
#    logAbandoned = true  当关闭 abanded 连接时输出错误日志

#/>